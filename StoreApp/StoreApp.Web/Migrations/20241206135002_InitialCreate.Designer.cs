// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreApp.Data.Concrete;

#nullable disable

namespace StoreApp.Web.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20241206135002_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("StoreApp.Data.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Url")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Elektrogitar",
                            Url = "elektrogitar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kulaklık",
                            Url = "kulaklık"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bilgisayar",
                            Url = "bilgisayar"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kasa",
                            Url = "kasa"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Klavye",
                            Url = "klavye"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Mouse",
                            Url = "mouse"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Anakart",
                            Url = "anakart"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ram",
                            Url = "ram"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Power",
                            Url = "power"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Gpu",
                            Url = "gpu"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Cpu",
                            Url = "cpu"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Fan",
                            Url = "fan"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Ssd",
                            Url = "ssd"
                        });
                });

            modelBuilder.Entity("StoreApp.Data.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("StoreApp.Data.Concrete.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("StoreApp.Data.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "nota",
                            Name = "Ibanez-1",
                            Price = 15000m
                        },
                        new
                        {
                            Id = 2,
                            Description = "nota",
                            Name = "Ibanez-2",
                            Price = 20000m
                        },
                        new
                        {
                            Id = 3,
                            Description = "nota",
                            Name = "Ibanez-3",
                            Price = 30000m
                        },
                        new
                        {
                            Id = 4,
                            Description = "nota",
                            Name = "Ibanez-4",
                            Price = 40000m
                        },
                        new
                        {
                            Id = 5,
                            Description = "nota",
                            Name = "Ibanez-5",
                            Price = 50000m
                        },
                        new
                        {
                            Id = 6,
                            Description = "nota",
                            Name = "Ibanez-6",
                            Price = 60000m
                        },
                        new
                        {
                            Id = 7,
                            Description = "nota",
                            Name = "Ibanez-11",
                            Price = 11000m
                        },
                        new
                        {
                            Id = 8,
                            Description = "nota",
                            Name = "Ibanez-21",
                            Price = 21000m
                        },
                        new
                        {
                            Id = 9,
                            Description = "nota",
                            Name = "Ibanez-31",
                            Price = 31000m
                        },
                        new
                        {
                            Id = 10,
                            Description = "nota",
                            Name = "Ibanez-41",
                            Price = 41000m
                        },
                        new
                        {
                            Id = 11,
                            Description = "nota",
                            Name = "Ibanez-51",
                            Price = 51000m
                        },
                        new
                        {
                            Id = 12,
                            Description = "nota",
                            Name = "Ibanez-61",
                            Price = 61000m
                        },
                        new
                        {
                            Id = 13,
                            Description = "mouse",
                            Name = "Mouse-1",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 14,
                            Description = "gpu",
                            Name = "Gpu-2",
                            Price = 7000m
                        },
                        new
                        {
                            Id = 15,
                            Description = "cpu",
                            Name = "Cpu-3",
                            Price = 8000m
                        },
                        new
                        {
                            Id = 16,
                            Description = "cpu",
                            Name = "Cpu-4",
                            Price = 9000m
                        },
                        new
                        {
                            Id = 17,
                            Description = "power",
                            Name = "Power-5",
                            Price = 4000m
                        },
                        new
                        {
                            Id = 18,
                            Description = "power",
                            Name = "Power-6",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 19,
                            Description = "ram",
                            Name = "Ram-11",
                            Price = 4000m
                        },
                        new
                        {
                            Id = 20,
                            Description = "ram",
                            Name = "Ram-21",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 21,
                            Description = "anakart",
                            Name = "Anakart-31",
                            Price = 11000m
                        },
                        new
                        {
                            Id = 22,
                            Description = "anakart",
                            Name = "Anakart-41",
                            Price = 21000m
                        },
                        new
                        {
                            Id = 23,
                            Description = "fan",
                            Name = "Fan-51",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 24,
                            Description = "ssd",
                            Name = "Ssd-61",
                            Price = 1000m
                        },
                        new
                        {
                            Id = 25,
                            Description = "bilgisayar",
                            Name = "Bilgisayar-1",
                            Price = 105000m
                        },
                        new
                        {
                            Id = 26,
                            Description = "bilgisayar",
                            Name = "Bilgisayar-2",
                            Price = 200000m
                        },
                        new
                        {
                            Id = 27,
                            Description = "kasa",
                            Name = "Kasa-3",
                            Price = 60000m
                        },
                        new
                        {
                            Id = 28,
                            Description = "kasa",
                            Name = "Kasa-4",
                            Price = 80000m
                        },
                        new
                        {
                            Id = 29,
                            Description = "klavye",
                            Name = "Klavye-5",
                            Price = 4000m
                        },
                        new
                        {
                            Id = 30,
                            Description = "klavye",
                            Name = "Klavye-6",
                            Price = 8000m
                        },
                        new
                        {
                            Id = 31,
                            Description = "mouse",
                            Name = "Mouse-11",
                            Price = 11000m
                        },
                        new
                        {
                            Id = 32,
                            Description = "ssd",
                            Name = "Ssd-21",
                            Price = 7500m
                        },
                        new
                        {
                            Id = 33,
                            Description = "kasa",
                            Name = "Kasa-31",
                            Price = 50000m
                        },
                        new
                        {
                            Id = 34,
                            Description = "kasa",
                            Name = "Kasa-41",
                            Price = 45000m
                        },
                        new
                        {
                            Id = 35,
                            Description = "kulaklık",
                            Name = "Kulaklık-51",
                            Price = 8000m
                        },
                        new
                        {
                            Id = 36,
                            Description = "kulaklık",
                            Name = "Kulaklık-61",
                            Price = 6000m
                        },
                        new
                        {
                            Id = 37,
                            Description = "kulaklık",
                            Name = "Kulaklık-62",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 38,
                            Description = "fan",
                            Name = "Fan-2",
                            Price = 7000m
                        },
                        new
                        {
                            Id = 39,
                            Description = "fan",
                            Name = "Fan-3",
                            Price = 8000m
                        },
                        new
                        {
                            Id = 40,
                            Description = "cpu",
                            Name = "Cpu-4",
                            Price = 9000m
                        });
                });

            modelBuilder.Entity("StoreApp.Data.Concrete.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 13
                        },
                        new
                        {
                            CategoryId = 10,
                            ProductId = 14
                        },
                        new
                        {
                            CategoryId = 11,
                            ProductId = 15
                        },
                        new
                        {
                            CategoryId = 11,
                            ProductId = 16
                        },
                        new
                        {
                            CategoryId = 9,
                            ProductId = 17
                        },
                        new
                        {
                            CategoryId = 9,
                            ProductId = 18
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 19
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 20
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 21
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 22
                        },
                        new
                        {
                            CategoryId = 12,
                            ProductId = 23
                        },
                        new
                        {
                            CategoryId = 13,
                            ProductId = 24
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 25
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 26
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 27
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 28
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 29
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 30
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 31
                        },
                        new
                        {
                            CategoryId = 13,
                            ProductId = 32
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 33
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 34
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 35
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 36
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 37
                        },
                        new
                        {
                            CategoryId = 12,
                            ProductId = 38
                        },
                        new
                        {
                            CategoryId = 12,
                            ProductId = 39
                        },
                        new
                        {
                            CategoryId = 11,
                            ProductId = 40
                        });
                });

            modelBuilder.Entity("StoreApp.Data.Concrete.OrderItem", b =>
                {
                    b.HasOne("StoreApp.Data.Concrete.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreApp.Data.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StoreApp.Data.Concrete.ProductCategory", b =>
                {
                    b.HasOne("StoreApp.Data.Concrete.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreApp.Data.Concrete.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoreApp.Data.Concrete.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
